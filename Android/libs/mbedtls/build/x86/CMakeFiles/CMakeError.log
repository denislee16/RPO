Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: D:/RazrabotkaPO_LABS/Android/libs/mbedtls/build/x86/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Users/berse/AppData/Local/Android/Sdk/cmake/3.22.1/bin/ninja.exe cmTC_df90c && [1/2] Building C object CMakeFiles/cmTC_df90c.dir/src.c.o
FAILED: CMakeFiles/cmTC_df90c.dir/src.c.o 
C:\Users\berse\AppData\Local\Android\Sdk\ndk\26.1.10909125\toolchains\llvm\prebuilt\windows-x86_64\bin\clang.exe --target=i686-none-linux-android21 --sysroot=C:/Users/berse/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot -DCMAKE_HAVE_LIBC_PTHREAD  -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -mstackrealign -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security   -fPIE -MD -MT CMakeFiles/cmTC_df90c.dir/src.c.o -MF CMakeFiles\cmTC_df90c.dir\src.c.o.d -o CMakeFiles/cmTC_df90c.dir/src.c.o -c D:/RazrabotkaPO_LABS/Android/libs/mbedtls/build/x86/CMakeFiles/CMakeTmp/src.c
D:/RazrabotkaPO_LABS/Android/libs/mbedtls/build/x86/CMakeFiles/CMakeTmp/src.c:13:3: error: call to undeclared function 'pthread_cancel'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
  pthread_cancel(thread);
  ^
D:/RazrabotkaPO_LABS/Android/libs/mbedtls/build/x86/CMakeFiles/CMakeTmp/src.c:13:3: note: did you mean 'pthread_once'?
C:/Users/berse/AppData/Local/Android/Sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/pthread.h:258:5: note: 'pthread_once' declared here
int pthread_once(pthread_once_t* _Nonnull __once, void (* _Nonnull __init_routine)(void));
    ^
1 error generated.
ninja: build stopped: subcommand failed.


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

